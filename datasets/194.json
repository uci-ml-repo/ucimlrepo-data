{
    "ID": 194,
    "Name": "Wall-Following Robot Navigation Data",
    "Abstract": "The data were collected as the SCITOS G5 robot navigates through the room following the wall in a clockwise direction, for 4 rounds, using 24 ultrasound sensors arranged circularly around its 'waist'.",
    "Types": "Multivariate, Sequential",
    "Task": "Classification",
    "AttributeTypes": "Real",
    "NumInstances": 5456,
    "NumAttributes": 24,
    "DateDonated": "2010-08-04",
    "MissingValues": 0,
    "URLFolder": "../machine-learning-databases/00194/",
    "URLReadme": "../machine-learning-databases/00194/Wall-following.names",
    "HighestAccuracy": 0,
    "RelevantInfo": "The provided files comprise three different data sets. The first one contains the raw values of the measurements \r\nof all 24 ultrasound sensors and the corresponding class label (see Section 7). Sensor readings are sampled at a \r\nrate of 9 samples per second.\r\n\r\nThe second one contains four sensor readings named 'simplified distances' and the corresponding class label (see Section 7). These simplified distances are referred to as the 'front distance', 'left distance', 'right distance' and 'back distance'. They consist, respectively, of the minimum sensor readings among those within 60 degree arcs located at the front, left, right and back parts of the robot.\r\n\r\nThe third one contains only the front and left simplified distances and the corresponding class label.\r\n\r\nIt is worth mentioning that the 24 ultrasound readings and the simplified distances were collected at the same time step, so each file has the same number of rows (one for each sampling time step).\r\n\r\nThe wall-following task and data gathering were designed to test the hypothesis that this apparently simple navigation task is indeed a non-linearly separable classification task. Thus, linear classifiers, such as the Perceptron network, are not able to learn the task and command the robot around the room without collisions. Nonlinear neural classifiers, such as the MLP network, are able to learn the task and command the robot successfully without collisions. \r\n\r\nIf some kind of short-term memory mechanism is provided to the neural classifiers, their performances are improved in general. For example, if past inputs are provided together with current sensor readings, even the Perceptron becomes able to learn the task and command the robot succesfully. If a recurrent neural network, such as the Elman network, is used to learn the task, the resulting dynamical classifier is able to learn the task using less hidden neurons than the MLP network.\r\n\r\nFiles with different number of sensor readings were built in order to evaluate the performance of the classifiers with respect to the number of inputs.",
    "Source": "(a) Creators: \tAnanda Freire, Marcus Veloso and Guilherme Barreto\r\n\r\n\t\tDepartment of Teleinformatics Engineering\r\n\r\n\t\tFederal University of Cear\u00c3\u00a1\r\n\t\t\tFortaleza, Cear\u00c3\u00a1, Brazil\r\n\r\n\r\n\r\n(b) Donors of database: Ananda Freire (anandalf@gmail.com)\r\n\t\t\tGuilherme Barreto (guilherme@deti.ufc.br)",
    "Acknowledgements": "",
    "Area": "Computer",
    "RelevantPapers": "Ananda L. Freire, Guilherme A. Barreto, Marcus Veloso and Antonio T. Varela (2009),\r\n'Short-Term Memory Mechanisms in Neural Network Learning of Robot Navigation\r\n Tasks: A Case Study'. Proceedings of the 6th Latin American Robotics Symposium (LARS'2009),\r\nValpara\u00c3\u00adso-Chile, pages 1-6, DOI: 10.1109/LARS.2009.5418323 ",
    "AttributeInfo": "Number of Attributes \r\n   -- sensor_readings_24.data: 24 numeric attributes and the class.\r\n   -- sensor_readings_4.data:   4 numeric attributes and the class.\r\n   -- sensor_readings_2.data:   2 numeric attributes and the class.\r\n\r\n\r\n\r\nFor Each Attribute: \r\n   -- File sensor_readings_24.data:\r\n\t1. US1: ultrasound sensor at the front of the robot (reference angle: 180\u00c2\u00b0) - (numeric: real)\r\n\t2. US2: ultrasound reading (reference angle: -165\u00c2\u00b0) - (numeric: real)\r\n\t3. US3: ultrasound reading (reference angle: -150\u00c2\u00b0) - (numeric: real)\r\n\t4. US4: ultrasound reading (reference angle: -135\u00c2\u00b0) - (numeric: real)\r\n\t5. US5: ultrasound reading (reference angle: -120\u00c2\u00b0) - (numeric: real)\r\n\t6. US6: ultrasound reading (reference angle: -105\u00c2\u00b0) - (numeric: real)\r\n\t7. US7: ultrasound reading (reference angle: -90\u00c2\u00b0) - (numeric: real)\r\n\t8. US8: ultrasound reading (reference angle: -75\u00c2\u00b0) - (numeric: real)\r\n\t9. US9: ultrasound reading (reference angle: -60\u00c2\u00b0) - (numeric: real)\r\n\t10. US10: ultrasound reading (reference angle: -45\u00c2\u00b0) - (numeric: real)\r\n\t11. US11: ultrasound reading (reference angle: -30\u00c2\u00b0) - (numeric: real)\r\n\t12. US12: ultrasound reading (reference angle: -15\u00c2\u00b0) - (numeric: real)\r\n\t13. US13: reading of ultrasound sensor situated at the back of the robot (reference angle: 0\u00c2\u00b0) - (numeric: real)\r\n\t14. US14: ultrasound reading (reference angle: 15\u00c2\u00b0) - (numeric: real)\r\n\t15. US15: ultrasound reading (reference angle: 30\u00c2\u00b0) - (numeric: real)\r\n\t16. US16: ultrasound reading (reference angle: 45\u00c2\u00b0) - (numeric: real)\r\n\t17. US17: ultrasound reading (reference angle: 60\u00c2\u00b0) - (numeric: real)\r\n\t18. US18: ultrasound reading (reference angle: 75\u00c2\u00b0) - (numeric: real)\r\n\t19. US19: ultrasound reading (reference angle: 90\u00c2\u00b0) - (numeric: real)\r\n\t20. US20: ultrasound reading (reference angle: 105\u00c2\u00b0) - (numeric: real)\r\n\t21. US21: ultrasound reading (reference angle: 120\u00c2\u00b0) - (numeric: real)\r\n\t22. US22: ultrasound reading (reference angle: 135\u00c2\u00b0) - (numeric: real)\r\n\t23. US23: ultrasound reading (reference angle: 150\u00c2\u00b0) - (numeric: real)\r\n\t24. US24: ultrasound reading (reference angle: 165\u00c2\u00b0) - (numeric: real)\r\n   \t25. Class: \r\n      \t\t-- Move-Forward\r\n      \t\t-- Slight-Right-Turn\r\n      \t\t-- Sharp-Right-Turn\r\n      \t\t-- Slight-Left-Turn\r\n\r\n   -- File sensor_readings_4.data:\r\n\t1. SD_front: minimum sensor reading within a 60 degree arc located at the front of the robot - (numeric: real)\r\n\t2. SD_left:  minimum sensor reading within a 60 degree arc located at the left of the robot  - (numeric: real)\r\n\t3. SD_right: minimum sensor reading within a 60 degree arc located at the right of the robot - (numeric: real)\r\n\t4. SD_back:  minimum sensor reading within a 60 degree arc located at the back of the robot - (numeric: real)\r\n   \t5. Class: \r\n      \t\t-- Move-Forward\r\n      \t\t-- Slight-Right-Turn\r\n      \t\t-- Sharp-Right-Turn\r\n      \t\t-- Slight-Left-Turn\r\n\r\n   -- File sensor_readings_2.data:\r\n\t1. SD_front: minimum sensor reading within a 60 degree arc located at the front of the robot - (numeric: real)\r\n\t2. SD_left:  minimum sensor reading within a 60 degree arc located at the left of the robot - (numeric: real)\r\n   \t3. Class: \r\n      \t\t-- Move-Forward\r\n      \t\t-- Slight-Right-Turn\r\n      \t\t-- Sharp-Right-Turn\r\n      \t\t-- Slight-Left-Turn",
    "FormatType": "Matrix",
    "NumHits": 9
}