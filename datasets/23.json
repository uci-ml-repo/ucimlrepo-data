{
    "ID": 23,
    "Name": "Chess (King-Rook vs. King)",
    "Abstract": "Chess Endgame Database for White King and Rook against Black King (KRK).",
    "Types": "Multivariate",
    "Task": "Classification",
    "AttributeTypes": "Categorical, Integer",
    "NumInstances": 28056,
    "NumAttributes": 6,
    "DateDonated": "1994-06-01",
    "MissingValues": 0,
    "URLFolder": "../machine-learning-databases/chess/king-rook-vs-king/",
    "URLReadme": "../machine-learning-databases/chess/king-rook-vs-king/krkopt.info",
    "HighestAccuracy": 0,
    "RelevantInfo": "An Inductive Logic Programming (ILP) or relational learning framework is assumed (Muggleton, 1992). The learning system is provided with examples of chess positions described only by the coordinates of the pieces on the board. Background knowledge in the form of row and column differences is also supplied. The relations necessary to form a correct and concise classifier for the target concept must be discovered by the learning system (the examples already provide a complete extensional definition). The task is closely related to Quinlan's (1983) application of ID3 to classify White King and Rook against Black King and Knight (KRKN) positions as lost 2-ply or lost 3-ply. The framework is similar in that the example positions supply only low-grade data. An important difference is that additional background predicates of the kind supplied in the KRKN study via hand-crafted attributes are not provided for this KRK domain.\r\n\r\nChess endgames are complex domains which are enumerable. Endgame databases are tables of stored game-theoretic values for the enumerated elements (legal positions) of the domain. The game-theoretic values stored denote whether or not positions are won for either side, or include also the depth of win (number of moves) assuming minimax-optimal play. From the point of view of experiments on computer induction such databases provide not only a source of examples but also an oracle (Roycroft, 1986) for testing induced rules. However a chess endgame database differs from, say, a relational database containing details of parts and suppliers in the following important respect. The combinatorics of computing the required game-theoretic values for individual position entries independently would be prohibitive. Therefore all the database entries are generated in a single iterative process using the ``standard backup'' algorithm (Thompson, 1986).\r\n\r\nA KRK database was described by Clarke (1977). The current database was described and used for machine learning experiments in Bain (1992; 1994). It should be noted that our database is not guaranteed correct, but the class distribution is the same as Clarke's database. In (Bain 1992; 1994) the task was classification of positions in the database as won for white in a fixed number of moves, assuming optimal play by both sides. The problem was structured into separate sub-problems by depth-of-win ordered draw, zero, one, ..., sixteen. When learning depth d all examples at depths > d are used as negatives. Quinlan (1994) applied Foil to learn a complete and correct solution for this task.\r\n\r\nThe typical complexity of induced classifiers in this domain suggest that the task is demanding when background knowledge is restricted.",
    "Source": "Creators: \r\n\r\nDatabase generated by Michael Bain and Arthur van Hoff at the Turing Institute, Glasgow, UK.\r\n\r\nDonor: \r\n\r\nMichael Bain (mike@cse.unsw.edu.au), AI Lab, Computer Science\r\nUniversity of New South Wales, Sydney 2052, Australia.\r\n(tel) +61 2 385 3939\r\n(fax) +61 2 663 4576",
    "Acknowledgements": "",
    "Area": "Game",
    "RelevantPapers": "M. Bain. \"Learning optimal chess strategies\", ILP 92:  ICOT TM-1182, S. Muggleton, Institute for New Generation Computer Technology, Tokyo, Japan.\r\nhttp://rexa.info/paper/3068cd036ca299281072081d634b9f38f3646a0e\r\n\r\nM. Bain. Learning Logical Exceptions in Chess.  PhD dissertation. University of Strathclyde. 1994.\r\nhttp://rexa.info/paper/d410c14380c801a28cbce7977aa538d40a52f90a\r\n\r\nM. R. B. Clarke. A Quantitative Study of King and Pawn Against King.  Advances in Computer Chess, 1, 108-110. M. R. B. Clarke, ed.  Edinburgh University Press. Edinburgh. 1977\r\nhttp://rexa.info/paper/9851e548dc21e8d3467057db1ffe193798547345\r\n\r\nS. Muggleton. Inductive Logic Programming, 3--27. S. Muggleton, ed. Academic Press, London, 1992.\r\nhttp://rexa.info/paper/77d82acf680f0b82cca0af33f4da5746c3b77cfc\r\n\r\nJ. R. Quinlan. Learning Efficient Classification Procedures and their Application to Chess End Games.Machine Learning: An Artificial Intelligence Approach. 464--482. R. Michalski and J. Carbonnel and T. Mitchell, eds. Tioga, 1983. Palo Alto, CA. \r\nhttp://rexa.info/paper/aa86d5d10d2d034d6c488b29d26d170ab2ea110e\r\n\r\nA. J. Roycroft. Database \"Oracles'': Necessary and desirable features. International Computer Chess Association Journal. 8, 2, 1986. 100--104.\r\nhttp://rexa.info/paper/bfdab90063993e413c76b24a15a5fa08bd3b5b6f\r\n\r\nK. Thompson. Retrograde Analysis of Certain Endgames.International Computer Chess Association Journal. 8, 3, 1986.  131-139.\r\nhttp://rexa.info/paper/e8df5b34a67a6d392c16e06321be1f0e466d73b9",
    "AttributeInfo": "   1. White King file (column)\r\n   2. White King rank (row)\r\n   3. White Rook file\r\n   4. White Rook rank\r\n   5. Black King file\r\n   6. Black King rank\r\n   7. optimal depth-of-win for White in 0 to 16 moves, otherwise drawn {draw, zero, one, two, ..., sixteen}.",
    "FormatType": "Dense-Matrix",
    "NumHits": 10063
}