{
    "ID": 440,
    "Name": "SGEMM GPU kernel performance",
    "Abstract": "Running times for multiplying two 2048 x 2048 matrices using a GPU OpenCL SGEMM kernel with varying parameters (using the library 'CLTune').",
    "Types": "Multivariate",
    "Task": "Regression",
    "AttributeTypes": "Integer",
    "NumInstances": 241600,
    "NumAttributes": 18,
    "DateDonated": "2018-02-27",
    "MissingValues": 0,
    "URLFolder": "../machine-learning-databases/00440/",
    "URLReadme": "#",
    "HighestAccuracy": 0,
    "RelevantInfo": "This data set measures the running time of a matrix-matrix product A*B = C, where all matrices have size 2048 x 2048, using a parameterizable SGEMM GPU kernel with 241600 possible parameter combinations. For each tested combination, 4 runs were performed and their results are reported as the 4 last columns. All times are measured in milliseconds*.\r\n\r\nThere are 14 parameter, the first 10 are ordinal and can only take up to 4 different powers of two values, and the 4 last variables are binary. Out of 1327104 total parameter combinations, only 241600 are feasible (due to various kernel constraints). This data set contains the results for all these feasible combinations.\r\n\r\nThe experiment was run on a desktop workstation running Ubuntu 16.04 Linux with an Intel Core i5 (3.5GHz), 16GB RAM, and a NVidia Geforce GTX 680 4GB GF580 GTX-1.5GB GPU. We use the 'gemm_fast' kernel from the automatic OpenCL kernel tuning library 'CLTune' (https://github.com/CNugteren/CLTune).\r\n\r\n* Note: for this kind of data sets it is usually better to work with the logarithm of the running times (see e.g. Falch and Elster, 'Machine learning-based auto-tuning for enhanced performance portability of OpenCL applications', 2015).",
    "Source": "Enrique G. Paredes (egparedes@ifi.uzh.ch). Visualization and MultiMedia Lab, Department of Informatics, University of Zurich. Zurich, 8050. Switzerland\r\nRafael Ballester-Ripoll (rballester@ifi.uzh.ch). Visualization and MultiMedia Lab, Department of Informatics, University of Zurich. Zurich, 8050. Switzerland",
    "Acknowledgements": "If you use this data set, please cite one or both of these:\r\n\r\n- Rafael Ballester-Ripoll, Enrique G. Paredes, Renato Pajarola.\r\nSobol Tensor Trains for Global Sensitivity Analysis.\r\nIn arXiv Computer Science / Numerical Analysis e-prints, 2017 \r\n(https://arxiv.org/abs/1712.00233).\r\n\r\n- Cedric Nugteren and Valeriu Codreanu.\r\nCLTune: A Generic Auto-Tuner for OpenCL Kernels.\r\nIn: MCSoC: 9th International Symposium on Embedded Multicore/Many-core Systems-on-Chip. IEEE, 2015 \r\n(http://ieeexplore.ieee.org/document/7328205/)",
    "Area": "Computer",
    "RelevantPapers": "A fraction of this data set was used in the following paper to compute a tensor train based predictive model and estimate the Sobol sensitivity indices of all the parameters:\r\n\r\nRafael Ballester-Ripoll, Enrique G. Paredes, Renato Pajarola.\r\nSobol Tensor Trains for Global Sensitivity Analysis.\r\nIn arXiv Computer Science / Numerical Analysis e-prints, 2017 \r\n(https://arxiv.org/abs/1712.00233).",
    "AttributeInfo": "- Independent variables:\r\n    1-2. MWG, NWG: per-matrix 2D tiling at workgroup level: {16, 32, 64, 128} (integer)\r\n    3. KWG: inner dimension of 2D tiling at workgroup level: {16, 32} (integer)\r\n    4-5. MDIMC, NDIMC: local workgroup size: {8, 16, 32} (integer)\r\n    6-7. MDIMA, NDIMB: local memory shape: {8, 16, 32} (integer)\r\n    8. KWI: kernel loop unrolling factor: {2, 8} (integer)\r\n    9-10. VWM, VWN: per-matrix vector widths for loading and storing: {1, 2, 4, 8} (integer)\r\n    11-12. STRM, STRN: enable stride for accessing off-chip memory within a single thread: {0, 1} (categorical)\r\n    13-14. SA, SB: per-matrix manual caching of the 2D workgroup tile: {0, 1} (categorical)\r\n\r\n- Output:\r\n    15-18. Run1, Run2, Run3, Run4: performance times in milliseconds for 4 independent runs using the same parameters. They range between 13.25 and 3397.08.",
    "FormatType": "Matrix",
    "NumHits": 0
}